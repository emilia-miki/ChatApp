@using ChatApp.ViewModels
@using System.Text.Json
@using ChatApp.BLL.Models
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage

@inject HttpClient Http
@inject ProtectedSessionStorage Storage

<h1>SignUp</h1>

<EditForm Model="_registerViewModel" OnValidSubmit="Register">
    <DataAnnotationsValidator />
    <CustomValidator @ref="_customValidator" />
    <ValidationSummary />
        
    <label class="form-label">
        Login: 
        <InputText @bind-Value="_registerViewModel.Login"/>
    </label>
    <label class="form-label">
        Password:
        <InputText type="password" @bind-Value="_registerViewModel.Password"/>
    </label>
    <label class="form-label">
        Confirm password:
        <InputText type="password" @bind-Value="_registerViewModel.PasswordConfirmation"/>
    </label>
    <button class="btn btn-primary" type="submit">Sign up</button>
</EditForm>

@code {
    private readonly RegisterViewModel _registerViewModel = new();
    private CustomValidator? _customValidator;

    private async void Register()
    {
        _customValidator?.ClearErrors();
        
        var response = await Http.PostAsJsonAsync(
            "auth/register", _registerViewModel);
        if (response.IsSuccessStatusCode)
        {
            var token = await response.Content.ReadFromJsonAsync<LoginResult>();
            await Storage.SetAsync("access_token", token!);
            return;
        }

        var errors = await response.Content
            .ReadFromJsonAsync<Dictionary<string, List<string>>>();
        _customValidator?.DisplayErrors(errors!);
    }
}