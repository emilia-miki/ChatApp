@page "/"
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@using ChatApp.ViewModels
@using Microsoft.AspNetCore.SignalR.Client

@inject ProtectedSessionStorage Storage
@inject NavigationManager NavigationManager
@inject HttpClient Http

<PageTitle>ChatApp</PageTitle>

@if (Component == "profile")
{
    <Profile AccessToken="@AccessToken" />
}
@if (Component == "users")
{
    <DataGrid 
        T="UserView"
        Name="Users" 
        DefaultSortBy="Login" 
        GetChatName="@GetPersonalChatName"
        HubConnection="@HubConnection" 
        Token="@AccessToken?.AccessToken"
        CallBack="@Open" />
}
@if (Component == "groups")
{
    <DataGrid 
        T="ChatView"
        Name="Groups" 
        DefaultSortBy="Name" 
        GetChatName="@(view => view.Name)"
        HubConnection="@HubConnection" 
        Token="@AccessToken?.AccessToken"
        CallBack="@Open" />
}
@if (Component == "chat")
{
    <Chat HubConnection="@HubConnection"
          Name="@_chatName" 
          UserName="@AccessToken!.UserName" />
}

@code {
    [CascadingParameter(Name = "AccessToken")]
    public LoginResult? AccessToken { get; set; }
    [CascadingParameter(Name = "HubConnection")]
    public HubConnection? HubConnection { get; set; }
    [CascadingParameter(Name = "Component")]
    public string Component { get; set; } = null!;
    private string? _chatName;

    private void Open(string chatName)
    {
        _chatName = chatName;
        Component = "chat";
        StateHasChanged();
    }

    private string GetPersonalChatName(UserView view)
    {
        var username1 = view.Login;
        var username2 = AccessToken!.UserName;
        if (string.CompareOrdinal(username1, username2) > 0)
        {
            (username1, username2) = (username2, username1);
        }

        return $"{username1} and {username2} Personal Chat";
    }
}